
import streamlit as st
import pandas as pd

# ===== –°–¢–ò–õ–¨ CSS =====
st.markdown("""
    <style>
    body {
        background-color: #014421;
        color: #fff;
    }
    .reportview-container {
        background: #014421;
        color: #fff;
    }
    .block-container {
        background-color: #014421;
        color: #fff;
    }
    th, td {
        color: #ffeb3b !important;
    }
    .stDataFrame thead tr th {
        color: #ffeb3b !important;
        background-color: #014421 !important;
    }
    .result-box {
        background-color: rgba(200, 200, 200, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 16px;
        border-radius: 10px;
        margin-bottom: 20px;
    }
    </style>
""", unsafe_allow_html=True)

st.title("üîç –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞–º")

uploaded_file = st.file_uploader("üìé –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª .ods", type=["ods"])

if uploaded_file:
    try:
        # –ß—Ç–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        df = pd.read_excel(uploaded_file, engine='odf', header=6)
        df.columns = df.columns.astype(str).str.strip()  # –£–¥–∞–ª–∏–º –ø—Ä–æ–±–µ–ª—ã
        df = df.reset_index(drop=True)
        df = df.applymap(lambda x: str(x).strip() if pd.notnull(x) else x)

        # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∏—Å–∫–∞
        search_fullname = st.text_input("üî§ –í–≤–µ–¥–∏—Ç–µ –§–ò–û (–î–æ–ª–∂–Ω–∏–∫) –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ:")
        search_dob = st.text_input("üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1987-05-09):")
        show_all_sorted = st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
        results = df

        if search_fullname and "–î–æ–ª–∂–Ω–∏–∫" in df.columns:
            results = results[results["–î–æ–ª–∂–Ω–∏–∫"].str.contains(search_fullname, case=False, na=False)]

        if search_dob and "–î.—Ä. –¥–æ–ª–∂–Ω–∏–∫–∞" in df.columns:
            results = results[results["–î.—Ä. –¥–æ–ª–∂–Ω–∏–∫–∞"].str.contains(search_dob, na=False)]

        if show_all_sorted and "–î–æ–ª–∂–Ω–∏–∫" in df.columns:
            results = df.sort_values(by="–î–æ–ª–∂–Ω–∏–∫")

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if not results.empty:
            st.success(f"üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {len(results)}")
            for idx, row in results.iterrows():
                with st.container():
                    st.markdown('<div class="result-box">', unsafe_allow_html=True)
                    st.markdown(f"<h4 style='color:#ffeb3b;'>üë§ –î–æ–ª–∂–Ω–∏–∫: {row.get('–î–æ–ª–∂–Ω–∏–∫', '‚Äî')}</h4>", unsafe_allow_html=True)
                    st.write(f"üè† –ê–¥—Ä–µ—Å: {row.get('–ê–¥—Ä–µ—Å –¥–æ–ª–∂–Ω–∏–∫–∞', '‚Äî')}")
                    st.write(f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {row.get('–î.—Ä. –¥–æ–ª–∂–Ω–∏–∫–∞', '‚Äî')}")
                    st.write(f"üí∞ –°—É–º–º–∞ –¥–æ–ª–≥–∞: {row.get('–°—É–º–º–∞ –¥–æ–ª–≥–∞', '‚Äî')}")
                    st.write(f"üìâ –û—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞: {row.get('–û—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞', '‚Äî')}")
                    st.write(f"‚öñÔ∏è –°—É–º–º–∞ –∏—Å–ø. —Å–±–æ—Ä–∞: {row.get('–°—É–º–º–∞ –∏—Å–ø. —Å–±–æ—Ä–∞', '‚Äî')}")
                    st.write(f"üßæ –û—Å—Ç–∞—Ç–æ–∫ –ø–æ –∏—Å–ø. —Å–±–æ—Ä—É: {row.get('–û—Å—Ç–∞—Ç–æ–∫ –ø–æ –∏—Å–ø. —Å–±–æ—Ä—É', '‚Äî')}")
                    st.write(f"üè¢ –í–∑—ã—Å–∫–∞—Ç–µ–ª—å: {row.get('–í–∑—ã—Å–∫–∞—Ç–µ–ª—å', '‚Äî')}")
                    st.write(f"üìÑ –°—É—â–Ω–æ—Å—Ç—å: {row.get('–°—É—â–Ω–æ—Å—Ç—å', '‚Äî')}")
                    st.markdown('</div>', unsafe_allow_html=True)
        else:
            st.warning("üö´ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
else:
    st.info("üëà –ó–∞–≥—Ä—É–∑–∏—Ç–µ .ods —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")
